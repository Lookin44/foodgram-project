Index: recipes/admin.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.contrib import admin\n\n# Register your models here.\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/recipes/admin.py b/recipes/admin.py
--- a/recipes/admin.py	(revision 72f8d58f1239004bd7c15b7dd849aaf446a64a46)
+++ b/recipes/admin.py	(date 1622298250061)
@@ -1,3 +1,21 @@
 from django.contrib import admin
 
-# Register your models here.
+from .models import Tag, Ingredient, Recipe
+
+
+@admin.register(Tag)
+class TagAdmin(admin.ModelAdmin):
+    list_display = ('pk', 'title')
+
+
+@admin.register(Ingredient)
+class IngredientAdmin(admin.ModelAdmin):
+    list_display = ('pk', 'title', 'unit')
+    search_fields = ('title',)
+
+
+@admin.register(Recipe)
+class RecipeAdmin(admin.ModelAdmin):
+    list_display = ('pk', 'title', 'author', 'slug')
+    search_fields = ('title',)
+    empty_value_display = '-пусто-'
Index: recipes/models.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.db import models\n\n# Create your models here.\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/recipes/models.py b/recipes/models.py
--- a/recipes/models.py	(revision 72f8d58f1239004bd7c15b7dd849aaf446a64a46)
+++ b/recipes/models.py	(date 1622297995988)
@@ -1,3 +1,25 @@
 from django.db import models
 
-# Create your models here.
+from users.models import User
+
+
+class Tag(models.Model):
+    title = models.CharField(max_length=50)
+
+
+class Ingredient(models.Model):
+    title = models.CharField(max_length=50)
+    unit = models.CharField(max_length=50)
+
+
+class Recipe(models.Model):
+    author = models.ForeignKey(
+        User,
+        on_delete=models.CASCADE,
+        related_name='recipes')
+    title = models.CharField(max_length=50)
+    image = models.ImageField(upload_to='recipes/')
+    ingredients = models.ManyToManyField(Ingredient)
+    tag = models.ManyToManyField(Tag)
+    cooking_time = models.PositiveSmallIntegerField()
+    slug = models.SlugField(unique=True)
Index: foodgram/urls.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"\"\"foodgram URL Configuration\n\nThe `urlpatterns` list routes URLs to views. For more information please see:\n    https://docs.djangoproject.com/en/3.2/topics/http/urls/\nExamples:\nFunction views\n    1. Add an import:  from my_app import views\n    2. Add a URL to urlpatterns:  path('', views.home, name='home')\nClass-based views\n    1. Add an import:  from other_app.views import Home\n    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')\nIncluding another URLconf\n    1. Import the include() function: from django.urls import include, path\n    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))\n\"\"\"\nfrom django.contrib import admin\nfrom django.urls import path\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n]\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/foodgram/urls.py b/foodgram/urls.py
--- a/foodgram/urls.py	(revision 72f8d58f1239004bd7c15b7dd849aaf446a64a46)
+++ b/foodgram/urls.py	(date 1622296482086)
@@ -1,21 +1,19 @@
-"""foodgram URL Configuration
-
-The `urlpatterns` list routes URLs to views. For more information please see:
-    https://docs.djangoproject.com/en/3.2/topics/http/urls/
-Examples:
-Function views
-    1. Add an import:  from my_app import views
-    2. Add a URL to urlpatterns:  path('', views.home, name='home')
-Class-based views
-    1. Add an import:  from other_app.views import Home
-    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')
-Including another URLconf
-    1. Import the include() function: from django.urls import include, path
-    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))
-"""
 from django.contrib import admin
-from django.urls import path
+from django.urls import include, path
+from django.conf import settings
+from django.conf.urls.static import static
 
 urlpatterns = [
+    path('', include('recipes.urls')),
     path('admin/', admin.site.urls),
+    path('auth/', include('users.urls')),
+    path('auth/', include('django.contrib.auth.urls')),
 ]
+
+if settings.DEBUG:
+    urlpatterns += static(
+        settings.MEDIA_URL, document_root=settings.MEDIA_ROOT
+    )
+    urlpatterns += static(
+        settings.STATIC_URL, document_root=settings.STATIC_ROOT
+    )
Index: users/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.shortcuts import render\n\n# Create your views here.\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/users/views.py b/users/views.py
--- a/users/views.py	(revision 72f8d58f1239004bd7c15b7dd849aaf446a64a46)
+++ b/users/views.py	(date 1622297156527)
@@ -1,3 +1,30 @@
-from django.shortcuts import render
+from django.contrib.auth.views import PasswordResetView
+from django.http import HttpResponseRedirect
+from django.views.generic import CreateView
+from django.urls import reverse_lazy
+from .forms import CreationForm
+
 
-# Create your views here.
+class SignUp(CreateView):
+    form_class = CreationForm
+    success_url = reverse_lazy('login')
+    template_name = 'reg.html'
+
+
+class MyPasswordResetView(PasswordResetView):
+
+    def form_valid(self, form):
+        opts = {
+            'use_https': self.request.is_secure(),
+            'token_generator': self.token_generator,
+            'from_email': self.from_email,
+            'email_template_name': self.email_template_name,
+            'subject_template_name': self.subject_template_name,
+            'request': self.request,
+            'html_email_template_name':
+                'registration/password_reset_email.html',
+            'extra_email_context': self.extra_email_context,
+        }
+        form.save(**opts)
+        return HttpResponseRedirect(self.get_success_url())
+
Index: recipes/urls.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/recipes/urls.py b/recipes/urls.py
new file mode 100644
--- /dev/null	(date 1622296530406)
+++ b/recipes/urls.py	(date 1622296530406)
@@ -0,0 +1,4 @@
+from django.contrib import admin
+from django.urls import path
+
+urlpatterns = []
Index: users/templatetags/user_filters.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/users/templatetags/user_filters.py b/users/templatetags/user_filters.py
new file mode 100644
--- /dev/null	(date 1620557128918)
+++ b/users/templatetags/user_filters.py	(date 1620557128918)
@@ -0,0 +1,7 @@
+from django import template
+register = template.Library()
+
+
+@register.filter
+def addclass(field, css):
+        return field.as_widget(attrs={"class": css})
Index: users/urls.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/users/urls.py b/users/urls.py
new file mode 100644
--- /dev/null	(date 1622296854318)
+++ b/users/urls.py	(date 1622296854318)
@@ -0,0 +1,12 @@
+from django.urls import path
+from . import views
+
+
+urlpatterns = [
+    path('signup/', views.SignUp.as_view(), name='signup'),
+    path(
+        'password_reset/',
+        views.MyPasswordResetView.as_view(),
+        name='password_reset'
+    ),
+]
Index: recipes/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.shortcuts import render\n\n# Create your views here.\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/recipes/views.py b/recipes/views.py
--- a/recipes/views.py	(revision 72f8d58f1239004bd7c15b7dd849aaf446a64a46)
+++ b/recipes/views.py	(date 1622297000314)
@@ -1,3 +1,2 @@
 from django.shortcuts import render
 
-# Create your views here.
Index: users/admin.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.contrib import admin\n\n# Register your models here.\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/users/admin.py b/users/admin.py
--- a/users/admin.py	(revision 72f8d58f1239004bd7c15b7dd849aaf446a64a46)
+++ b/users/admin.py	(date 1622296854314)
@@ -1,3 +1,0 @@
-from django.contrib import admin
-
-# Register your models here.
Index: users/forms.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/users/forms.py b/users/forms.py
new file mode 100644
--- /dev/null	(date 1622296854294)
+++ b/users/forms.py	(date 1622296854294)
@@ -0,0 +1,9 @@
+from django.contrib.auth.forms import UserCreationForm
+
+from .models import User
+
+
+class CreationForm(UserCreationForm):
+    class Meta(UserCreationForm.Meta):
+        model = User
+        fields = ("first_name", "last_name", "username", "email")
diff --git a/users/templatetags/__init__.py b/users/templatetags/__init__.py
new file mode 100644
